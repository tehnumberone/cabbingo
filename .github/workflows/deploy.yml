name: Deploy Angular App to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: github-pages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.12'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Write environment files from secrets
      - name: Create Angular environment files
        env:
          NG_APP_FIREBASE_API_KEY: ${{ secrets.NG_APP_FIREBASE_API_KEY }}
          NG_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.NG_APP_FIREBASE_AUTH_DOMAIN }}
          NG_APP_FIREBASE_DATABASE_URL: ${{ secrets.NG_APP_FIREBASE_DATABASE_URL }}
          NG_APP_FIREBASE_PROJECT_ID: ${{ secrets.NG_APP_FIREBASE_PROJECT_ID }}
          NG_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.NG_APP_FIREBASE_STORAGE_BUCKET }}
          NG_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NG_APP_FIREBASE_MESSAGING_SENDER_ID }}
          NG_APP_FIREBASE_APP_ID: ${{ secrets.NG_APP_FIREBASE_APP_ID }}
        run: |
          # Create environment.ts (dev version)
          cat > src/app/environment.ts << 'EOF'
          export const environment = {
            production: false,
            firebaseConfig: {
              apiKey: "${{ secrets.NG_APP_FIREBASE_API_KEY }}",
              authDomain: "${{ secrets.NG_APP_FIREBASE_AUTH_DOMAIN }}",
              databaseURL: "${{ secrets.NG_APP_FIREBASE_DATABASE_URL }}",
              projectId: "${{ secrets.NG_APP_FIREBASE_PROJECT_ID }}",
              storageBucket: "${{ secrets.NG_APP_FIREBASE_STORAGE_BUCKET }}",
              messagingSenderId: "${{ secrets.NG_APP_FIREBASE_MESSAGING_SENDER_ID }}",
              appId: "${{ secrets.NG_APP_FIREBASE_APP_ID }}"
            }
          };
          EOF
          
          # Create environment.prod.ts (production version)
          cat > src/app/environment.prod.ts << 'EOF'
          export const environment = {
            production: true,
            firebaseConfig: {
              apiKey: "${{ secrets.NG_APP_FIREBASE_API_KEY }}",
              authDomain: "${{ secrets.NG_APP_FIREBASE_AUTH_DOMAIN }}",
              databaseURL: "${{ secrets.NG_APP_FIREBASE_DATABASE_URL }}",
              projectId: "${{ secrets.NG_APP_FIREBASE_PROJECT_ID }}",
              storageBucket: "${{ secrets.NG_APP_FIREBASE_STORAGE_BUCKET }}",
              messagingSenderId: "${{ secrets.NG_APP_FIREBASE_MESSAGING_SENDER_ID }}",
              appId: "${{ secrets.NG_APP_FIREBASE_APP_ID }}"
            }
          };
          EOF

      # Optional: fail fast if DB URL is missing or clearly wrong
      - name: Sanity-check Firebase DB URL (masked)
        run: |
          if [ -z "${{ secrets.NG_APP_FIREBASE_DATABASE_URL }}" ]; then
            echo "NG_APP_FIREBASE_DATABASE_URL is empty"; exit 1;
          fi
          echo "DB URL present"

      - name: Build Angular app
        run: |
          npm run build -- --configuration=production --base-href="/cabbingov2/"

      - name: Fix GitHub Pages SPA routing
        run: |
          # Copy index.html to 404.html for SPA routing
          cp dist/cabbingov2/browser/index.html dist/cabbingov2/browser/404.html
          
          # Create .nojekyll file to prevent GitHub from processing files starting with _
          touch dist/cabbingov2/browser/.nojekyll

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/cabbingov2/browser