name: Deploy Angular App to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: github-pages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.12'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Write environment.prod.ts from secrets (no logs of secret values)
      - name: Create Angular production environment
        env:
          NG_APP_FIREBASE_API_KEY: ${{ secrets.NG_APP_FIREBASE_API_KEY }}
          NG_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.NG_APP_FIREBASE_AUTH_DOMAIN }}
          NG_APP_FIREBASE_DATABASE_URL: ${{ secrets.NG_APP_FIREBASE_DATABASE_URL }}
          NG_APP_FIREBASE_PROJECT_ID: ${{ secrets.NG_APP_FIREBASE_PROJECT_ID }}
          NG_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.NG_APP_FIREBASE_STORAGE_BUCKET }}
          NG_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NG_APP_FIREBASE_MESSAGING_SENDER_ID }}
          NG_APP_FIREBASE_APP_ID: ${{ secrets.NG_APP_FIREBASE_APP_ID }}
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const e = process.env;
          const cfg = `export const environment = {
            production: true,
            firebaseConfig: {
              apiKey: "${e.NG_APP_FIREBASE_API_KEY}",
              authDomain: "${e.NG_APP_FIREBASE_AUTH_DOMAIN}",
              databaseURL: "${e.NG_APP_FIREBASE_DATABASE_URL}",
              projectId: "${e.NG_APP_FIREBASE_PROJECT_ID}",
              storageBucket: "${e.NG_APP_FIREBASE_STORAGE_BUCKET}",
              messagingSenderId: "${e.NG_APP_FIREBASE_MESSAGING_SENDER_ID}",
              appId: "${e.NG_APP_FIREBASE_APP_ID}"
            }
          };`;
          fs.writeFileSync('src/app/environment.prod.ts', cfg);
          
          // Also create regular environment.ts from template for the build
          const devCfg = fs.readFileSync('src/app/environment.template.ts', 'utf8')
            .replace(/YOUR_FIREBASE_API_KEY/g, "${e.NG_APP_FIREBASE_API_KEY}")
            .replace(/YOUR_FIREBASE_AUTH_DOMAIN/g, "${e.NG_APP_FIREBASE_AUTH_DOMAIN}")
            .replace(/YOUR_FIREBASE_DATABASE_URL/g, "${e.NG_APP_FIREBASE_DATABASE_URL}")
            .replace(/YOUR_FIREBASE_PROJECT_ID/g, "${e.NG_APP_FIREBASE_PROJECT_ID}")
            .replace(/YOUR_FIREBASE_STORAGE_BUCKET/g, "${e.NG_APP_FIREBASE_STORAGE_BUCKET}")
            .replace(/YOUR_FIREBASE_MESSAGING_SENDER_ID/g, "${e.NG_APP_FIREBASE_MESSAGING_SENDER_ID}")
            .replace(/YOUR_FIREBASE_APP_ID/g, "${e.NG_APP_FIREBASE_APP_ID}");
          fs.writeFileSync('src/app/environment.ts', devCfg);
          NODE

      # Optional: fail fast if DB URL is missing or clearly wrong
      - name: Sanity-check Firebase DB URL (masked)
        run: |
          if [ -z "${{ secrets.NG_APP_FIREBASE_DATABASE_URL }}" ]; then
            echo "NG_APP_FIREBASE_DATABASE_URL is empty"; exit 1;
          fi
          echo "DB URL present"

      - name: Build Angular app
        run: |
          npm run build -- --base-href="/cabbingov2/"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/cabbingov2/browser